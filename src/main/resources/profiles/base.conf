## Common profile settings

# Where to find ISO files
iso.path = [ ~/dev/usbinstall/iso/OSes/Linux, ~/dev/usbinstall/iso/OSes/Microsoft ]

# Where to find tool files (syslinux, etc.)
tools.path = [ ~/dev/usbinstall/tools ]

syslinux.extra = {
  # Where to find extra image files to add to syslinux
  images.path = [ ~/dev/usbinstall/syslinux/bootdisk ]
}

refind {
  # Where to find rEFInd
  # Subfolder 'drivers_x64' is copied to target EFI folder.
  path = ~/dev/usbinstall/rEFInd

  # Drivers to install
  # (regular expression on filename)
  # NTFS.efi driver (in 'drivers_x64' subfolder) appears faster than official
  # rEFInd implementation, so it is preferred.
  drivers = ["ext4"]
}


## OS settings that can be referenced in actual installation profiles
os-setup {

  # kind = OS kind
  # Possible values:
  #   - Windows: windows 7/8/10
  #   - Generic: common Linux using syslinux
  #   - syslinux: where we build our boot menu and include extra images
  #   - SystemRescueCD
  #   - ArchLinux
  #   - Ubuntu
  #   - Fedora
  #   - CentOS
  #
  # label: boot menu visual label
  # Can contain spaces.
  #
  # size: minimum size needed in partition
  #
  # iso.pattern: regex searched inside (recursively) iso.path to find ISO
  #
  # partition.label: partition label to set
  #
  # partition.filesystem: how to format partition
  # Possible values: ext2, ntfs, fat32 and fat16
  #
  # syslinux.label: internal syslinux label
  # Must not contain spaces.
  #
  # syslinux.version: syslinux version to use when installing OS bootloader
  # Latest version is used by default.
  #
  # efi.loader: EFI loader to use
  # Can be a relative path (inside ISO) with .efi suffix.
  # Can be a filename to search for in EFI/boot; both x64.efi and .efi suffixes
  # are searched for.
  # If not given or found, grub boot file is searched, or standard boot file is
  # used.

  windows-7 = {
    kind = "Windows"
    label = "Windows 7"
    size = 3200 MiB
    iso.pattern = "(?i)win.*7.*x64.*"
    partition = {
      label = "Win7x64"
      filesystem = "ntfs"
    }
    syslinux.label = "Win7x64"
  }

  windows-10 = {
    kind = "Windows"
    label = "Windows 10"
    size = 4200 MiB
    iso.pattern = "(?i)win.*10.*x64"
    partition = {
      label = "Win10x64"
      filesystem = "ntfs"
    }
    syslinux.label = "Win10x64"
  }

  syslinux = {
    kind = "syslinux"
    size = 50 MiB
    partition = {
      label = "Syslinux"
      filesystem = "fat32"
    }
    syslinux.version = 6.03
  }

  memtest86 = {
    kind = "Generic"
    label = "memtest86"
    size = 20 MiB
    iso.pattern = "(?i)memtest86"
    partition = {
      label = "memtest86"
      filesystem = "ext2"
    }
    syslinux = {
      label = "memtest86"
      version = 4
    }
  }

  gparted = {
    kind = "Generic"
    label = "GParted Live"
    size = 380 MiB
    iso.pattern = "(?i)gparted"
    partition = {
      label = "GPartedLive"
      filesystem = "ext2"
    }
    syslinux = {
      label = "GPartedLive"
      version = 6.03
    }
    efi.grub {
      override = """
# Search for our partition
search --no-floppy --set=root --fs-uuid ${partition.uuid}
# Use the actual boot configuration
configfile ($root)/EFI/boot/grub.cfg
"""
      fonts = "unicode"
    }
  }

  system-rescue-cd = {
    kind = "SystemRescueCD"
    label = "System Rescue CD"
    size = 700 MiB
    iso.pattern = "(?i)systemrescuecd"
    partition ={
      label = "SysRescueCD"
      filesystem = "ext2"
    }
    syslinux = {
      label = "SystemRescueCD"
      version = 6.04-pre2
    }
  }

  archlinux-gnome = {
    kind = "ArchLinux"
    label = "Arch Linux Gnome"
    size = 1800 MiB
    iso.pattern = "(?i)archlinux-gnome"
    partition = {
      label = "Arch_Gnome"
      filesystem = "ext2"
    }
    syslinux = {
      label = "ArchGnome"
      version = 6.04-pre2
    }
    efi.loader = "loader"
  }

  archlinux = {
    kind = "ArchLinux"
    label = "Arch Linux"
    size = 700 MiB
    iso.pattern = "(?i)archlinux-(?!gnome)"
    partition = {
      label = "Arch_Linux"
      filesystem = "ext2"
    }
    syslinux = {
      label = "ArchLinux"
      version = 6.04-pre2
    }
    efi.loader = "loader"
  }

  ubuntu = {
    kind = "Ubuntu"
    label = "Ubuntu Install"
    size = 2800 MiB
    iso.pattern = "(?i)ubuntu.*desktop.*amd64"
    partition = {
      label = "Ubuntu_Inst"
      filesystem = "ext2"
    }
    syslinux = {
      label = "UbuntuInstall"
      version = 6.04-pre2
    }
  }

  ubuntu-persistent = ${os-setup.ubuntu} {
    label = "Ubuntu Persistent"
    settings = {
      format = false
      persistence = true
      status = NotInstalled
    }
    size = 3000 MiB
    partition = {
      label = "Ubuntu_Pers"
      # Note: ubuntu searches for its persistency file in fat32 partitions only
      filesystem = "fat32"
    }
    syslinux = {
      label = "UbuntuPersistent"
    }
  }

  fedora = {
    kind = "Fedora"
    label = "Fedora Live"
    size = 2000 MiB
    iso.pattern = "(?i)fedora.*live"
    partition = {
      label = "Fedora_Live"
      filesystem = "ext2"
    }
    syslinux = {
      label = "FedoraLive"
      version = 6.03
    }
  }

  centos = {
    kind = "CentOS"
    label = "CentOS Live"
    size = 1500 MiB
    iso.pattern = "(?i)centos.*live"
    partition = {
      label = "CentOS_Live"
      filesystem = "ext2"
    }
    syslinux = {
      label = "CentOSLive"
      version = 4
    }
  }

  medicat = {
    kind = "Generic"
    label = "Medicat"
    size = 1800 MiB
    iso.pattern = "(?i)mini\\.windows.*"
    partition = {
      label = "Medicat"
      filesystem = "ntfs"
    }
    syslinux {
      root = ""
      label = "Medicat"
      #version = 6.03
    }
  }

}

## Image settings that can be referenced in actual installation profiles
image-setup {

  memtest86-plus = {
    image = "memtest86+-5.01.bin"
    label = "memtest86+ 5.01"
  }

  super-grub2 = {
    image = "super_grub2_disk_hybrid_2.02s8.iso"
    label = "Super Grub2 Disk"
  }

  super-grub = {
    image = "super_grub_disk.iso"
    label = "Super Grub Disk"
  }

  grub4dos = {
    kind = "grub4dos"
    label = "Grub4DOS"
  }

}
